@model GameReviewApp.Models.IndexViewModel
@using GameReviewApp.Models
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "Manage";
}
<div class="contentContainer">
    <h2>@ViewBag.Title.</h2>
    <p class="text-success">@ViewBag.StatusMessage</p>
    <div>
        <h4>Change your account settings</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>Profile:</dt>
            <dd>
                [
                    @Html.ActionLink("Edit Profile", "Edit", "Account", new { userName = User.Identity.GetUserName() }, null)
                ]
            </dd>
            @*<dt>External Logins:</dt>
            <dd>
                @Model.Logins.Count [
                @Html.ActionLink("Manage", "ManageLogins") ]
            </dd>
            <dt>Two-Factor Authentication:</dt>
            <dd>
                <p>
                    There are no two-factor authentication providers configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                    for details on setting up this ASP.NET application to support two-factor authentication.
                </p>
            </dd>*@
        </dl>
    </div>
</div>


<div class="contentContainer sortBar">
    Sort By: @Html.ActionLink("High-to-Low", "Index", new { sortOrder = "RatingDesc" }) |
    @Html.ActionLink("Low-to-High", "Index", new { sortOrder = "RatingAsc"}) |
    <form id="gameFilterForm" action="/Manage/Index/contentFilterForm" method="post" style="display:  inline-flex;">
            @Html.Label("Search for Text", htmlAttributes: new { @class = "col-sm-6 searchLabel", @style = "font-size: 100%;" })
            @Html.TextBox("searchCriteria", null, new { @class = "form-control col-sm-6 contentSearch" })
    </form>
</div>

@foreach (var item in Model.UserReviews)
{
    List<Game> gameList = ViewBag.GameList;

    Game selectedGame = gameList.Where(g => g.Id == item.GameId).ToList().First();
    <div class="row detailBox reviewBox">
        <div class="row reviewUsername">
            @selectedGame.Name
            <hr class="reviewBreak" />
        </div>
        <div class="row reviewText">
            @item.Content
        </div>
        <div class="row reviewNumber">
            <hr class="reviewBreak" />
            <p>@item.NumRating</p>
        </div>
        <div class="row">
            <hr class="reviewBreak" />
            @Html.ActionLink("Edit", "Edit", "Reviews", new { id = item.Id}, null) |
            @Html.ActionLink("Details", "Details", "Reviews", new { id = item.Id }, null) |
            @Html.ActionLink("Delete", "Delete", "Reviews", new { id = item.Id }, null)
        </div>

    </div>

}